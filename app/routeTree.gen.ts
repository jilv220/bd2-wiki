/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DefaultImport } from './routes/_default'
import { Route as DefaultIndexImport } from './routes/_default/index'
import { Route as DefaultCharactersImport } from './routes/_default/characters'
import { Route as AuthSigninImport } from './routes/_auth/signin'

// Create/Update Routes

const DefaultRoute = DefaultImport.update({
  id: '/_default',
  getParentRoute: () => rootRoute,
} as any)

const DefaultIndexRoute = DefaultIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultRoute,
} as any)

const DefaultCharactersRoute = DefaultCharactersImport.update({
  id: '/characters',
  path: '/characters',
  getParentRoute: () => DefaultRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/_auth/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_default': {
      id: '/_default'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/_default/characters': {
      id: '/_default/characters'
      path: '/characters'
      fullPath: '/characters'
      preLoaderRoute: typeof DefaultCharactersImport
      parentRoute: typeof DefaultImport
    }
    '/_default/': {
      id: '/_default/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DefaultIndexImport
      parentRoute: typeof DefaultImport
    }
  }
}

// Create and export the route tree

interface DefaultRouteChildren {
  DefaultCharactersRoute: typeof DefaultCharactersRoute
  DefaultIndexRoute: typeof DefaultIndexRoute
}

const DefaultRouteChildren: DefaultRouteChildren = {
  DefaultCharactersRoute: DefaultCharactersRoute,
  DefaultIndexRoute: DefaultIndexRoute,
}

const DefaultRouteWithChildren =
  DefaultRoute._addFileChildren(DefaultRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof DefaultRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/characters': typeof DefaultCharactersRoute
  '/': typeof DefaultIndexRoute
}

export interface FileRoutesByTo {
  '/signin': typeof AuthSigninRoute
  '/characters': typeof DefaultCharactersRoute
  '/': typeof DefaultIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_default': typeof DefaultRouteWithChildren
  '/_auth/signin': typeof AuthSigninRoute
  '/_default/characters': typeof DefaultCharactersRoute
  '/_default/': typeof DefaultIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/signin' | '/characters' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/signin' | '/characters' | '/'
  id:
    | '__root__'
    | '/_default'
    | '/_auth/signin'
    | '/_default/characters'
    | '/_default/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DefaultRoute: typeof DefaultRouteWithChildren
  AuthSigninRoute: typeof AuthSigninRoute
}

const rootRouteChildren: RootRouteChildren = {
  DefaultRoute: DefaultRouteWithChildren,
  AuthSigninRoute: AuthSigninRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_default",
        "/_auth/signin"
      ]
    },
    "/_default": {
      "filePath": "_default.tsx",
      "children": [
        "/_default/characters",
        "/_default/"
      ]
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.tsx"
    },
    "/_default/characters": {
      "filePath": "_default/characters.tsx",
      "parent": "/_default"
    },
    "/_default/": {
      "filePath": "_default/index.tsx",
      "parent": "/_default"
    }
  }
}
ROUTE_MANIFEST_END */
