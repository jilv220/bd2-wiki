/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DefaultImport } from './routes/_default'
import { Route as DefaultIndexImport } from './routes/_default/index'
import { Route as DefaultCollectionsImport } from './routes/_default/collections'
import { Route as DefaultCharactersImport } from './routes/_default/characters'
import { Route as DefaultCollectionsIndexImport } from './routes/_default/collections.index'
import { Route as DefaultCharactersIndexImport } from './routes/_default/characters.index'
import { Route as DefaultCharactersNameImport } from './routes/_default/characters.$name'

// Create/Update Routes

const DefaultRoute = DefaultImport.update({
  id: '/_default',
  getParentRoute: () => rootRoute,
} as any)

const DefaultIndexRoute = DefaultIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultRoute,
} as any)

const DefaultCollectionsRoute = DefaultCollectionsImport.update({
  id: '/collections',
  path: '/collections',
  getParentRoute: () => DefaultRoute,
} as any)

const DefaultCharactersRoute = DefaultCharactersImport.update({
  id: '/characters',
  path: '/characters',
  getParentRoute: () => DefaultRoute,
} as any)

const DefaultCollectionsIndexRoute = DefaultCollectionsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultCollectionsRoute,
} as any)

const DefaultCharactersIndexRoute = DefaultCharactersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultCharactersRoute,
} as any)

const DefaultCharactersNameRoute = DefaultCharactersNameImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => DefaultCharactersRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_default': {
      id: '/_default'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultImport
      parentRoute: typeof rootRoute
    }
    '/_default/characters': {
      id: '/_default/characters'
      path: '/characters'
      fullPath: '/characters'
      preLoaderRoute: typeof DefaultCharactersImport
      parentRoute: typeof DefaultImport
    }
    '/_default/collections': {
      id: '/_default/collections'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof DefaultCollectionsImport
      parentRoute: typeof DefaultImport
    }
    '/_default/': {
      id: '/_default/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DefaultIndexImport
      parentRoute: typeof DefaultImport
    }
    '/_default/characters/$name': {
      id: '/_default/characters/$name'
      path: '/$name'
      fullPath: '/characters/$name'
      preLoaderRoute: typeof DefaultCharactersNameImport
      parentRoute: typeof DefaultCharactersImport
    }
    '/_default/characters/': {
      id: '/_default/characters/'
      path: '/'
      fullPath: '/characters/'
      preLoaderRoute: typeof DefaultCharactersIndexImport
      parentRoute: typeof DefaultCharactersImport
    }
    '/_default/collections/': {
      id: '/_default/collections/'
      path: '/'
      fullPath: '/collections/'
      preLoaderRoute: typeof DefaultCollectionsIndexImport
      parentRoute: typeof DefaultCollectionsImport
    }
  }
}

// Create and export the route tree

interface DefaultCharactersRouteChildren {
  DefaultCharactersNameRoute: typeof DefaultCharactersNameRoute
  DefaultCharactersIndexRoute: typeof DefaultCharactersIndexRoute
}

const DefaultCharactersRouteChildren: DefaultCharactersRouteChildren = {
  DefaultCharactersNameRoute: DefaultCharactersNameRoute,
  DefaultCharactersIndexRoute: DefaultCharactersIndexRoute,
}

const DefaultCharactersRouteWithChildren =
  DefaultCharactersRoute._addFileChildren(DefaultCharactersRouteChildren)

interface DefaultCollectionsRouteChildren {
  DefaultCollectionsIndexRoute: typeof DefaultCollectionsIndexRoute
}

const DefaultCollectionsRouteChildren: DefaultCollectionsRouteChildren = {
  DefaultCollectionsIndexRoute: DefaultCollectionsIndexRoute,
}

const DefaultCollectionsRouteWithChildren =
  DefaultCollectionsRoute._addFileChildren(DefaultCollectionsRouteChildren)

interface DefaultRouteChildren {
  DefaultCharactersRoute: typeof DefaultCharactersRouteWithChildren
  DefaultCollectionsRoute: typeof DefaultCollectionsRouteWithChildren
  DefaultIndexRoute: typeof DefaultIndexRoute
}

const DefaultRouteChildren: DefaultRouteChildren = {
  DefaultCharactersRoute: DefaultCharactersRouteWithChildren,
  DefaultCollectionsRoute: DefaultCollectionsRouteWithChildren,
  DefaultIndexRoute: DefaultIndexRoute,
}

const DefaultRouteWithChildren =
  DefaultRoute._addFileChildren(DefaultRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof DefaultRouteWithChildren
  '/characters': typeof DefaultCharactersRouteWithChildren
  '/collections': typeof DefaultCollectionsRouteWithChildren
  '/': typeof DefaultIndexRoute
  '/characters/$name': typeof DefaultCharactersNameRoute
  '/characters/': typeof DefaultCharactersIndexRoute
  '/collections/': typeof DefaultCollectionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof DefaultIndexRoute
  '/characters/$name': typeof DefaultCharactersNameRoute
  '/characters': typeof DefaultCharactersIndexRoute
  '/collections': typeof DefaultCollectionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_default': typeof DefaultRouteWithChildren
  '/_default/characters': typeof DefaultCharactersRouteWithChildren
  '/_default/collections': typeof DefaultCollectionsRouteWithChildren
  '/_default/': typeof DefaultIndexRoute
  '/_default/characters/$name': typeof DefaultCharactersNameRoute
  '/_default/characters/': typeof DefaultCharactersIndexRoute
  '/_default/collections/': typeof DefaultCollectionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/characters'
    | '/collections'
    | '/'
    | '/characters/$name'
    | '/characters/'
    | '/collections/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/characters/$name' | '/characters' | '/collections'
  id:
    | '__root__'
    | '/_default'
    | '/_default/characters'
    | '/_default/collections'
    | '/_default/'
    | '/_default/characters/$name'
    | '/_default/characters/'
    | '/_default/collections/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DefaultRoute: typeof DefaultRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  DefaultRoute: DefaultRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_default"
      ]
    },
    "/_default": {
      "filePath": "_default.tsx",
      "children": [
        "/_default/characters",
        "/_default/collections",
        "/_default/"
      ]
    },
    "/_default/characters": {
      "filePath": "_default/characters.tsx",
      "parent": "/_default",
      "children": [
        "/_default/characters/$name",
        "/_default/characters/"
      ]
    },
    "/_default/collections": {
      "filePath": "_default/collections.tsx",
      "parent": "/_default",
      "children": [
        "/_default/collections/"
      ]
    },
    "/_default/": {
      "filePath": "_default/index.tsx",
      "parent": "/_default"
    },
    "/_default/characters/$name": {
      "filePath": "_default/characters.$name.tsx",
      "parent": "/_default/characters"
    },
    "/_default/characters/": {
      "filePath": "_default/characters.index.tsx",
      "parent": "/_default/characters"
    },
    "/_default/collections/": {
      "filePath": "_default/collections.index.tsx",
      "parent": "/_default/collections"
    }
  }
}
ROUTE_MANIFEST_END */
